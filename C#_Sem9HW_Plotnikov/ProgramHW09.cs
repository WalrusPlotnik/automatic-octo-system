//######## C# ДЗ№8 Плотников #########################################################
// ***********************************************************************************
// Задача 64: Задайте значения M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N.
// M = 1; N = 5. -> ""1, 2, 3, 4, 5""
// M = 4; N = 8. -> ""4, 6, 7, 8""
/*
// функция приёма входных данных
int InputData(string line){
    Console.Write(line);
    int number = int.Parse(Console.ReadLine() ?? "1");
    return number;
}
// функция обработки данных - рекурсивная последовательность чисел
string MNInterval(int m, int n){
    if (m >= n){
        return n.ToString(); // если число N не превышает M, возвращаем только N и ничего более 
    }
    else{
        // составляем строку из числа m и числа следующего за ним 
        return m + ", " + MNInterval(m+1, n);
    }
}
// функция вывода данных
void ShowData(string prefix, string number){
    Console.WriteLine(prefix + number);
}
// объявляем переменные входных данных через функцию ввода
int m = InputData("Введите число М, начало интервала: ");
int n = InputData("Введите число N, конец интервала: ");
// объявляем через функцию обработки данных переменную для искомых значений 
string result = (m < n) ? MNInterval(m,n) : MNInterval(n,m);
// вызываем функцию вывода, другие две функции она вызовет сама
ShowData("Интервал от M до N состоит из следующих натуральных чисел: ", result);

*/
//***************************************************************************************
//Задача 66: Задайте значения M и N. 
//Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.

// функция приёма входных данных
int InputData(string line){
    Console.Write(line);
    int number = int.Parse(Console.ReadLine() ?? "1");
    return number;
}
// функция обработки данных - рекурсивная сумма последовательности чисел
int MNIntervalSummation(int m, int n){ // теперь функция не строчная, а целочисленная
    if (m >= n){
        return n; // если число N не превышает M, возвращаем  только N и ничего более 
    }
    else{
        // возвращаем сумму числа m и числа следующего за ним 
        return m + MNIntervalSummation(m+1, n);
    }
}
// функция вывода данных
void ShowData(string prefix, string number){
    Console.WriteLine(prefix + number);
}
// объявляем переменные входных данных через функцию ввода
int m = InputData("Введите число М, начало интервала: ");
int n = InputData("Введите число N, конец интервала: ");
// объявляем переменную для результата (суммы) 
int result = 0;
// присваиваем эту переменную через функцию обработки данных (рекурсивной суммы последовательности чисел)
if(m<n) result = MNIntervalSummation(m,n); // учитываем 
else result = MNIntervalSummation(n,m);    // направление

// вызываем функцию вывода, другие две функции она вызовет сама
ShowData("Числа в интервале от M до N в сумме составляют: ", result.ToString()); // с конвертацией в string
